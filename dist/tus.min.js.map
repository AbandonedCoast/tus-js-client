{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","lib/browser/base64.js","lib/browser/request.js","lib/browser/source.js","lib/browser/storage.js","lib/error.js","lib/fingerprint.js","lib/index.js","lib/upload.js","node_modules/extend/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","tus","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","encode","btoa","data","unescape","encodeURIComponent","isSupported","newRequest","XMLHttpRequest","getSource","FileSource","file","_classCallCheck","_file","size","start","end","slice","input","setItem","getItem","removeItem","hasStorage","localStorage","SECURITY_ERR","canStoreURLs","key","value","DetailedError","error","causingErr","arguments","undefined","xhr","_this","_possibleConstructorReturn","Object","getPrototypeOf","message","originalRequest","causingError","toString","status","responseText","fingerprint","name","type","lastModified","join","defaultOptions","_window","Blob","prototype","Upload","_upload2","default","_storage","Base64","Storage","endpoint","_fingerprint2","resume","onProgress","onChunkComplete","onSuccess","onError","headers","chunkSize","Infinity","withCredentials","uploadUrl","uploadSize","overridePatchMethod","retryDelays","options","_extend2","url","_xhr","_fingerprint","_offset","_aborted","_size","_source","_retryAttempt","_retryTimeout","_offsetBeforeRetry","_emitError","source","isNaN","errorCallback","err","isOnline","navigator","onLine","shouldRetry","shouldNotWait","delay","setTimeout","_resumeUpload","resumedUrl","_createUpload","abort","close","clearTimeout","_error2","bytesSent","bytesTotal","bytesAccepted","setRequestHeader","_this2","_request","open","onload","_emitXhrError","getResponseHeader","_startUpload","onerror","_setupXHR","metadata","encodeMetadata","send","_this3","offset","parseInt","_emitProgress","_emitSuccess","_this4","_emitChunkComplete","upload","onprogress","lengthComputable","loaded","encoded","push","hasOwn","hasOwnProperty","toStr","isArray","arr","Array","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","extend","src","copy","copyIsArray","clone","target","deep"],"mappings":"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","file":"generated.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global: window */\n\nconst {btoa} = window;\n\nexport function encode(data) {\n  return btoa(unescape(encodeURIComponent(data)));\n}\n\nexport const isSupported = \"btoa\" in window;\n","/* global window */\n\nexport function newRequest() {\n  return new window.XMLHttpRequest();\n}\n","class FileSource {\n  constructor(file) {\n    this._file = file;\n    this.size = file.size;\n  }\n\n  slice(start, end) {\n    return this._file.slice(start, end);\n  }\n\n  close() {}\n}\n\nexport function getSource(input) {\n  // Since we emulate the Blob type in our tests (not all target browsers\n  // support it), we cannot use `instanceof` for testing whether the input value\n  // can be handled. Instead, we simply check is the slice() function and the\n  // size property are available.\n  if (typeof input.slice === \"function\" && typeof input.size !== \"undefined\") {\n    return new FileSource(input);\n  }\n\n  throw new Error(\"source object may only be an instance of File or Blob in this environment\");\n}\n","/* global window, localStorage */\n\nlet hasStorage = false;\ntry {\n  hasStorage = \"localStorage\" in window;\n  // Attempt to access localStorage\n  localStorage.length;\n} catch (e) {\n  // If we try to access localStorage inside a sandboxed iframe, a SecurityError\n  // is thrown.\n  if (e.code === e.SECURITY_ERR) {\n    hasStorage = false;\n  } else {\n    throw e;\n  }\n}\n\nexport const canStoreURLs = hasStorage;\n\nexport function setItem(key, value) {\n  if (!hasStorage) return;\n  return localStorage.setItem(key, value);\n}\n\nexport function getItem(key) {\n  if (!hasStorage) return;\n  return localStorage.getItem(key);\n}\n\nexport function removeItem(key) {\n  if (!hasStorage) return;\n  return localStorage.removeItem(key);\n}\n","class DetailedError extends Error {\n  constructor(error, causingErr = null, xhr = null) {\n    super(error.message);\n\n    this.originalRequest = xhr;\n    this.causingError = causingErr;\n\n    let message = error.message;\n    if (causingErr != null) {\n      message += `, caused by ${causingErr.toString()}`;\n    }\n    if (xhr != null) {\n      message += `, originated from request (response code: ${xhr.status}, response text: ${xhr.responseText})`;\n    }\n    this.message = message;\n  }\n}\n\nexport default DetailedError;\n","/**\n * Generate a fingerprint for a file which will be used the store the endpoint\n *\n * @param {File} file\n * @return {String}\n */\nexport default function fingerprint(file) {\n  return [\n\t\t\"tus\",\n\t\tfile.name,\n\t\tfile.type,\n\t\tfile.size,\n\t\tfile.lastModified\n  ].join(\"-\");\n}\n","/* global window */\nimport Upload from \"./upload\";\nimport {canStoreURLs} from \"./node/storage\";\n\nconst {defaultOptions} = Upload;\n\nif (typeof window !== \"undefined\") {\n  // Browser environment using XMLHttpRequest\n  const {XMLHttpRequest, Blob} = window;\n\n  var isSupported = (\n    XMLHttpRequest &&\n    Blob &&\n    typeof Blob.prototype.slice === \"function\"\n  );\n} else {\n  // Node.js environment using http module\n  var isSupported = true;\n}\n\n// The usage of the commonjs exporting syntax instead of the new ECMAScript\n// one is actually inteded and prevents weird behaviour if we are trying to\n// import this module in another module using Babel.\nmodule.exports = {\n  Upload,\n  isSupported,\n  canStoreURLs,\n  defaultOptions\n};\n","/* global window */\nimport fingerprint from \"./fingerprint\";\nimport DetailedError from \"./error\";\nimport extend from \"extend\";\n\n// We import the files used inside the Node environment which are rewritten\n// for browsers using the rules defined in the package.json\nimport {newRequest} from \"./node/request\";\nimport {getSource} from \"./node/source\";\nimport * as Base64 from \"./node/base64\";\nimport * as Storage from \"./node/storage\";\n\nconst defaultOptions = {\n  endpoint: \"\",\n  fingerprint,\n  resume: true,\n  onProgress: null,\n  onChunkComplete: null,\n  onSuccess: null,\n  onError: null,\n  headers: {},\n  chunkSize: Infinity,\n  withCredentials: false,\n  uploadUrl: null,\n  uploadSize: null,\n  overridePatchMethod: false,\n  retryDelays: null\n};\n\nclass Upload {\n  constructor(file, options) {\n    this.options = extend(true, {}, defaultOptions, options);\n\n    // The underlying File/Blob object\n    this.file = file;\n\n    // The URL against which the file will be uploaded\n    this.url = null;\n\n    // The underlying XHR object for the current PATCH request\n    this._xhr = null;\n\n    // The fingerpinrt for the current file (set after start())\n    this._fingerprint = null;\n\n    // The offset used in the current PATCH request\n    this._offset = null;\n\n    // True if the current PATCH request has been aborted\n    this._aborted = false;\n\n    // The file's size in bytes\n    this._size = null;\n\n    // The Source object which will wrap around the given file and provides us\n    // with a unified interface for getting its size and slice chunks from its\n    // content allowing us to easily handle Files, Blobs, Buffers and Streams.\n    this._source = null;\n\n    // The current count of attempts which have been made. Null indicates none.\n    this._retryAttempt = 0;\n\n    // The timeout's ID which is used to delay the next retry\n    this._retryTimeout = null;\n\n    // The offset of the remote upload before the latest attempt was started.\n    this._offsetBeforeRetry = 0;\n  }\n\n  start() {\n    let file = this.file;\n\n    if (!file) {\n      this._emitError(new Error(\"tus: no file or stream to upload provided\"));\n      return;\n    }\n\n    if (!this.options.endpoint) {\n        this._emitError(new Error(\"tus: no endpoint provided\"));\n        return;\n    }\n\n    let source = this._source = getSource(file, this.options.chunkSize);\n\n    // Firstly, check if the caller has supplied a manual upload size or else\n    // we will use the calculated size by the source object.\n    if (this.options.uploadSize != null) {\n      let size = +this.options.uploadSize;\n      if (isNaN(size)) {\n        throw new Error(\"tus: cannot convert `uploadSize` option into a number\");\n      }\n\n      this._size = size;\n    } else {\n      let size = source.size;\n\n      // The size property will be null if we cannot calculate the file's size,\n      // for example if you handle a stream.\n      if (size == null) {\n        throw new Error(\"tus: cannot automatically derive upload's size from input and must be specified manually using the `uploadSize` option\");\n      }\n\n      this._size = size;\n    }\n\n    let retryDelays = this.options.retryDelays;\n    if (retryDelays != null) {\n      if (Object.prototype.toString.call(retryDelays) !== \"[object Array]\") {\n        throw new Error(\"tus: the `retryDelays` option must either be an array or null\");\n      } else {\n        let errorCallback = this.options.onError;\n        this.options.onError = (err) => {\n          // Restore the original error callback which may have been set.\n          this.options.onError = errorCallback;\n\n          let isOnline = true;\n          if (typeof window !== \"undefined\" &&\n             \"navigator\" in window &&\n             window.navigator.onLine === false) {\n               isOnline = false;\n             }\n\n          // We only attempt a retry if\n          // - we didn't exceed the maxium number of retries, yet, and\n          // - this error was caused by a request or it's response and\n          // - the browser does not indicate that we are offline\n          let shouldRetry = this._retryAttempt < retryDelays.length &&\n                            err.originalRequest != null &&\n                            isOnline;\n\n          if (!shouldRetry) {\n            this._emitError(err);\n            return;\n          }\n\n          // We will not apply the delay if\n          // - we were already able to connect to the server (offset != null) and\n          // - we were able to upload a small chunk of data to the server\n          let shouldNotWait = this._offset != null && !(this._offset > this._offsetBeforeRetry);\n          let delay = 0;\n          if (shouldNotWait) {\n            this._retryAttempt = 0;\n          } else {\n            delay = retryDelays[this._retryAttempt++];\n          }\n\n          this._offsetBeforeRetry = this._offset;\n          this.options.uploadUrl = this.url;\n\n          this._retryTimeout = setTimeout(() => {\n            this.start();\n          }, delay);\n        };\n      }\n    }\n\n    // A URL has manually been specified, so we try to resume\n    if (this.options.uploadUrl != null) {\n        this.url = this.options.uploadUrl;\n        this._resumeUpload();\n        return;\n    }\n\n    // Try to find the endpoint for the file in the storage\n    if (this.options.resume) {\n        this._fingerprint = this.options.fingerprint(file);\n        let resumedUrl = Storage.getItem(this._fingerprint);\n\n        if (resumedUrl != null) {\n            this.url = resumedUrl;\n            this._resumeUpload();\n            return;\n        }\n    }\n\n    // An upload has not started for the file yet, so we start a new one\n    this._createUpload();\n  }\n\n  abort() {\n    if (this._xhr !== null) {\n      this._xhr.abort();\n      this._source.close();\n      this._aborted = true;\n    }\n\n    if (this._retryTimeout != null) {\n      clearTimeout(this._retryTimeout);\n      this._retryTimeout = null;\n    }\n  }\n\n  _emitXhrError(xhr, err, causingErr) {\n    this._emitError(new DetailedError(err, causingErr, xhr));\n  }\n\n  _emitError(err) {\n    if (typeof this.options.onError === \"function\") {\n      this.options.onError(err);\n    } else {\n      throw err;\n    }\n  }\n\n  _emitSuccess() {\n    if (typeof this.options.onSuccess === \"function\") {\n      this.options.onSuccess();\n    }\n  }\n\n  /**\n   * Publishes notification when data has been sent to the server. This\n   * data may not have been accepted by the server yet.\n   * @param  {number} bytesSent  Number of bytes sent to the server.\n   * @param  {number} bytesTotal Total number of bytes to be sent to the server.\n   */\n  _emitProgress(bytesSent, bytesTotal) {\n    if (typeof this.options.onProgress === \"function\") {\n      this.options.onProgress(bytesSent, bytesTotal);\n    }\n  }\n\n  /**\n   * Publishes notification when a chunk of data has been sent to the server\n   * and accepted by the server.\n   * @param  {number} chunkSize  Size of the chunk that was accepted by the\n   *                             server.\n   * @param  {number} bytesAccepted Total number of bytes that have been\n   *                                accepted by the server.\n   * @param  {number} bytesTotal Total number of bytes to be sent to the server.\n   */\n  _emitChunkComplete(chunkSize, bytesAccepted, bytesTotal) {\n    if (typeof this.options.onChunkComplete === \"function\") {\n      this.options.onChunkComplete(chunkSize, bytesAccepted, bytesTotal);\n    }\n  }\n\n  /**\n   * Set the headers used in the request and the withCredentials property\n   * as defined in the options\n   *\n   * @param {XMLHttpRequest} xhr\n   */\n  _setupXHR(xhr) {\n    xhr.setRequestHeader(\"Tus-Resumable\", \"1.0.0\");\n    let headers = this.options.headers;\n\n    for (let name in headers) {\n      xhr.setRequestHeader(name, headers[name]);\n    }\n\n    xhr.withCredentials = this.options.withCredentials;\n  }\n\n  /**\n   * Create a new upload using the creation extension by sending a POST\n   * request to the endpoint. After successful creation the file will be\n   * uploaded\n   *\n   * @api private\n   */\n  _createUpload() {\n    let xhr = newRequest();\n    xhr.open(\"POST\", this.options.endpoint, true);\n\n    xhr.onload = () => {\n      if (!(xhr.status >= 200 && xhr.status < 300)) {\n        this._emitXhrError(xhr, new Error(\"tus: unexpected response while creating upload\"));\n        return;\n      }\n\n      this.url = xhr.getResponseHeader(\"Location\");\n\n      if (this.options.resume) {\n        Storage.setItem(this._fingerprint, this.url);\n      }\n\n      this._offset = 0;\n      this._startUpload();\n    };\n\n    xhr.onerror = (err) => {\n      this._emitXhrError(xhr, new Error(\"tus: failed to create upload\"), err);\n    };\n\n    this._setupXHR(xhr);\n    xhr.setRequestHeader(\"Upload-Length\", this._size);\n\n    // Add metadata if values have been added\n    var metadata = encodeMetadata(this.options.metadata);\n    if (metadata !== \"\") {\n        xhr.setRequestHeader(\"Upload-Metadata\", metadata);\n    }\n\n    xhr.send(null);\n  }\n\n  /*\n   * Try to resume an existing upload. First a HEAD request will be sent\n   * to retrieve the offset. If the request fails a new upload will be\n   * created. In the case of a successful response the file will be uploaded.\n   *\n   * @api private\n   */\n  _resumeUpload() {\n    let xhr = newRequest();\n    xhr.open(\"HEAD\", this.url, true);\n\n    xhr.onload = () => {\n      if (!(xhr.status >= 200 && xhr.status < 300)) {\n        if (this.options.resume) {\n          // Remove stored fingerprint and corresponding endpoint,\n          // since the file can not be found\n          Storage.removeItem(this._fingerprint);\n        }\n\n        // Try to create a new upload\n        this.url = null;\n        this._createUpload();\n        return;\n      }\n\n      let offset = parseInt(xhr.getResponseHeader(\"Upload-Offset\"), 10);\n      if (isNaN(offset)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing offset value\"));\n        return;\n      }\n\n      let length = parseInt(xhr.getResponseHeader(\"Upload-Length\"), 10);\n      if (isNaN(length)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing length value\"));\n        return;\n      }\n\n      // Upload has already been completed and we do not need to send additional\n      // data to the server\n      if (offset === length) {\n        this._emitProgress(length, length);\n        this._emitSuccess();\n        return;\n      }\n\n      this._offset = offset;\n      this._startUpload();\n    };\n\n    xhr.onerror = (err) => {\n      this._emitXhrError(xhr, new Error(\"tus: failed to resume upload\"), err);\n    };\n\n    this._setupXHR(xhr);\n    xhr.send(null);\n  }\n\n  /**\n   * Start uploading the file using PATCH requests. The file will be divided\n   * into chunks as specified in the chunkSize option. During the upload\n   * the onProgress event handler may be invoked multiple times.\n   *\n   * @api private\n   */\n  _startUpload() {\n    let xhr = this._xhr = newRequest();\n\n    // Some browser and servers may not support the PATCH method. For those\n    // cases, you can tell tus-js-client to use a POST request with the\n    // X-HTTP-Method-Override header for simulating a PATCH request.\n    if (this.options.overridePatchMethod) {\n      xhr.open(\"POST\", this.url, true);\n      xhr.setRequestHeader(\"X-HTTP-Method-Override\", \"PATCH\");\n    } else {\n      xhr.open(\"PATCH\", this.url, true);\n    }\n\n    xhr.onload = () => {\n      if (!(xhr.status >= 200 && xhr.status < 300)) {\n        this._emitXhrError(xhr, new Error(\"tus: unexpected response while uploading chunk\"));\n        return;\n      }\n\n      let offset = parseInt(xhr.getResponseHeader(\"Upload-Offset\"), 10);\n      if (isNaN(offset)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing offset value\"));\n        return;\n      }\n\n      this._emitProgress(offset, this._size);\n      this._emitChunkComplete(offset - this._offset, offset, this._size);\n\n      this._offset = offset;\n\n      if (offset == this._size) {\n        // Yay, finally done :)\n        this._emitSuccess();\n        this._source.close();\n        return;\n      }\n\n      this._startUpload();\n    };\n\n    xhr.onerror = (err) => {\n      // Don't emit an error if the upload was aborted manually\n      if (this._aborted) {\n        return;\n      }\n\n      this._emitXhrError(xhr, new Error(\"tus: failed to upload chunk at offset \" + this._offset), err);\n    };\n\n    // Test support for progress events before attaching an event listener\n    if (\"upload\" in xhr) {\n      xhr.upload.onprogress = (e) => {\n        if (!e.lengthComputable) {\n          return;\n        }\n\n        this._emitProgress(start + e.loaded, this._size);\n      };\n    }\n\n    this._setupXHR(xhr);\n\n    xhr.setRequestHeader(\"Upload-Offset\", this._offset);\n    xhr.setRequestHeader(\"Content-Type\", \"application/offset+octet-stream\");\n\n    let start = this._offset;\n    let end = this._offset + this.options.chunkSize;\n\n    // The specified chunkSize may be Infinity or the calcluated end position\n    // may exceed the file's size. In both cases, we limit the end position to\n    // the input's total size for simpler calculations and correctness.\n    if (end === Infinity || end > this._size) {\n      end = this._size;\n    }\n\n    xhr.send(this._source.slice(start, end));\n  }\n}\n\nfunction encodeMetadata(metadata) {\n    if (!Base64.isSupported) {\n        return \"\";\n    }\n\n    var encoded = [];\n\n    for (var key in metadata) {\n        encoded.push(key + \" \" + Base64.encode(metadata[key]));\n    }\n\n    return encoded.join(\",\");\n}\n\nUpload.defaultOptions = defaultOptions;\n\nexport default Upload;\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n"]}