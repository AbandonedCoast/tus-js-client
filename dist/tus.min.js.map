{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","lib/browser/base64.js","lib/browser/request.js","lib/browser/source.js","lib/browser/storage.js","lib/fingerprint.js","lib/index.js","lib/upload.js","node_modules/extend/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","tus","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length",1,"_dereq_","encode","btoa","_window","data","unescape","encodeURIComponent","isSupported","newRequest","XMLHttpRequest","getSource","FileSource","file","_file","size","start","end","slice","input","setItem","getItem","removeItem","hasStorage","localStorage","SECURITY_ERR","canStoreURLs","key","value","fingerprint","name","type","lastModified","join","defaultOptions","_upload2","default","Blob","prototype","Upload","_storage","Base64","_interopRequireWildcard","_base","Storage","endpoint","_fingerprint2","resume","onProgress","onChunkComplete","onSuccess","onError","headers","chunkSize","Infinity","withCredentials","uploadUrl","uploadSize","options","_extend2","url","_xhr","_fingerprint","_offset","_aborted","_size","_source","_emitError","source","isNaN","_resumeUpload","resumedUrl","_createUpload","abort","close","xhr","err","originalRequest","bytesSent","bytesTotal","bytesAccepted","setRequestHeader","_request","open","onload","status","_this","_emitXhrError","getResponseHeader","_startUpload","onerror","_setupXHR","metadata","encodeMetadata","send","_this2","offset","parseInt","_emitProgress","_emitSuccess","_this3","_emitChunkComplete","upload","onprogress","lengthComputable","loaded","encoded","push","hasOwn","Object","hasOwnProperty","toStr","toString","isArray","arr","Array","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","extend","src","copy","copyIsArray","clone","target","arguments","deep"],"mappings":"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G,IAAI,CAAC,KAAK,CAAC;OAClB;;AAED,SAAG,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;KAC1C;;;SA/UG,MAAM;;;AAkVZ,SAAS,cAAc,CAAC,QAAQ,EAAE;AAC9B,MAAI,CAAC,MAAM,CAAC,WAAW,EAAE;AACrB,WAAO,EAAE,CAAC;GACb;;AAED,MAAI,OAAO,GAAG,EAAE,CAAC;;AAEjB,OAAK,IAAI,GAAG,IAAI,QAAQ,EAAE;AACtB,WAAO,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;GAC1D;;AAED,SAAO,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;CAC5B;;AAED,MAAM,CAAC,cAAc,GAAG,cAAc,CAAC;;kBAExB,MAAM;;;AC5XrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"generated.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global: window */\n\nconst {btoa} = window;\n\nexport function encode(data) {\n  return btoa(unescape(encodeURIComponent(data)));\n}\n\nexport const isSupported = \"btoa\" in window;\n","/* global window */\n\nexport function newRequest() {\n  return new window.XMLHttpRequest();\n}\n","class FileSource {\n  constructor(file) {\n    this._file = file;\n    this.size = file.size;\n  }\n\n  slice(start, end) {\n    return this._file.slice(start, end);\n  }\n\n  close() {}\n}\n\nexport function getSource(input) {\n  // Since we emulate the Blob type in our tests (not all target browsers\n  // support it), we cannot use `instanceof` for testing whether the input value\n  // can be handled. Instead, we simply check is the slice() function and the\n  // size property are available.\n  if (typeof input.slice === \"function\" && typeof input.size !== \"undefined\") {\n    return new FileSource(input);\n  }\n\n  throw new Error(\"source object may only be an instance of File or Blob in this environment\");\n}\n","/* global window, localStorage */\n\nlet hasStorage = false;\ntry {\n  hasStorage = \"localStorage\" in window;\n  // Attempt to access localStorage\n  localStorage.length;\n} catch (e) {\n  // If we try to access localStorage inside a sandboxed iframe, a SecurityError\n  // is thrown.\n  if (e.code === e.SECURITY_ERR) {\n    hasStorage = false;\n  } else {\n    throw e;\n  }\n}\n\nexport const canStoreURLs = hasStorage;\n\nexport function setItem(key, value) {\n  if (!hasStorage) return;\n  return localStorage.setItem(key, value);\n}\n\nexport function getItem(key) {\n  if (!hasStorage) return;\n  return localStorage.getItem(key);\n}\n\nexport function removeItem(key) {\n  if (!hasStorage) return;\n  return localStorage.removeItem(key);\n}\n","/**\n * Generate a fingerprint for a file which will be used the store the endpoint\n *\n * @param {File} file\n * @return {String}\n */\nexport default function fingerprint(file) {\n  return [\n\t\t\"tus\",\n\t\tfile.name,\n\t\tfile.type,\n\t\tfile.size,\n\t\tfile.lastModified\n  ].join(\"-\");\n}\n","/* global window */\nimport Upload from \"./upload\";\nimport {canStoreURLs} from \"./node/storage\";\n\nconst {defaultOptions} = Upload;\n\nif (typeof window !== \"undefined\") {\n  // Browser environment using XMLHttpRequest\n  const {XMLHttpRequest, Blob} = window;\n\n  var isSupported = (\n    XMLHttpRequest &&\n    Blob &&\n    typeof Blob.prototype.slice === \"function\"\n  );\n} else {\n  // Node.js environment using http module\n  var isSupported = true;\n}\n\n// The usage of the commonjs exporting syntax instead of the new ECMAScript\n// one is actually inteded and prevents weird behaviour if we are trying to\n// import this module in another module using Babel.\nmodule.exports = {\n  Upload,\n  isSupported,\n  canStoreURLs,\n  defaultOptions\n};\n","/* global window */\nimport fingerprint from \"./fingerprint\";\nimport extend from \"extend\";\n\n// We import the files used inside the Node environment which are rewritten\n// for browsers using the rules defined in the package.json\nimport {newRequest} from \"./node/request\";\nimport {getSource} from \"./node/source\";\nimport * as Base64 from \"./node/base64\";\nimport * as Storage from \"./node/storage\";\n\nconst defaultOptions = {\n  endpoint: \"\",\n  fingerprint,\n  resume: true,\n  onProgress: null,\n  onChunkComplete: null,\n  onSuccess: null,\n  onError: null,\n  headers: {},\n  chunkSize: Infinity,\n  withCredentials: false,\n  uploadUrl: null,\n  uploadSize: null\n};\n\nclass Upload {\n  constructor(file, options) {\n    this.options = extend(true, {}, defaultOptions, options);\n\n    // The underlying File/Blob object\n    this.file = file;\n\n    // The URL against which the file will be uploaded\n    this.url = null;\n\n    // The underlying XHR object for the current PATCH request\n    this._xhr = null;\n\n    // The fingerpinrt for the current file (set after start())\n    this._fingerprint = null;\n\n    // The offset used in the current PATCH request\n    this._offset = null;\n\n    // True if the current PATCH request has been aborted\n    this._aborted = false;\n\n    // The file's size in bytes\n    this._size = null;\n\n    this._source = null;\n  }\n\n  start() {\n    let file = this.file;\n\n    if (!file) {\n      this._emitError(new Error(\"tus: no file or stream to upload provided\"));\n      return;\n    }\n\n    if (!this.options.endpoint) {\n        this._emitError(new Error(\"tus: no endpoint provided\"));\n        return;\n    }\n\n    let source = this._source = getSource(file, this.options.chunkSize);\n\n    if (this.options.uploadSize != null) {\n      let size = +this.options.uploadSize;\n      if (isNaN(size)) {\n        throw new Error(\"tus: cannot convert `uploadSize` option into a number\");\n      }\n\n      this._size = size;\n    } else {\n      let size = source.size;\n      if (size == null) {\n        throw new Error(\"tus: cannot automatically derive upload's size from input and must be specified manually using the `uploadSize` option\");\n      }\n\n      this._size = size;\n    }\n    /*\n\n    // Allow File#size (browsers) and Buffer#length (Node) as sizes\n    this._size = file.size || file.length || null;\n    if (this._size == null) {\n      this._emitError(new Error(\"tus: file's size not provided\"));\n      return;\n    }*/\n\n    // A URL has manually been specified, so we try to resume\n    if (this.options.uploadUrl != null) {\n        this.url = this.options.uploadUrl;\n        this._resumeUpload();\n        return;\n    }\n\n    // Try to find the endpoint for the file in the storage\n    if (this.options.resume) {\n        this._fingerprint = this.options.fingerprint(file);\n        let resumedUrl = Storage.getItem(this._fingerprint);\n\n        if (resumedUrl != null) {\n            this.url = resumedUrl;\n            this._resumeUpload();\n            return;\n        }\n    }\n\n    // An upload has not started for the file yet, so we start a new one\n    this._createUpload();\n  }\n\n  abort() {\n    if (this._xhr !== null) {\n      this._xhr.abort();\n      this._source.close();\n      this._aborted = true;\n    }\n  }\n\n  _emitXhrError(xhr, err) {\n    err.originalRequest = xhr;\n    this._emitError(err);\n  }\n\n  _emitError(err) {\n    if (typeof this.options.onError === \"function\") {\n      this.options.onError(err);\n    } else {\n      throw err;\n    }\n  }\n\n  _emitSuccess() {\n    if (typeof this.options.onSuccess === \"function\") {\n      this.options.onSuccess();\n    }\n  }\n\n  /**\n   * Publishes notification when data has been sent to the server. This\n   * data may not have been accepted by the server yet.\n   * @param  {number} bytesSent  Number of bytes sent to the server.\n   * @param  {number} bytesTotal Total number of bytes to be sent to the server.\n   */\n  _emitProgress(bytesSent, bytesTotal) {\n    if (typeof this.options.onProgress === \"function\") {\n      this.options.onProgress(bytesSent, bytesTotal);\n    }\n  }\n\n  /**\n   * Publishes notification when a chunk of data has been sent to the server\n   * and accepted by the server.\n   * @param  {number} chunkSize  Size of the chunk that was accepted by the\n   *                             server.\n   * @param  {number} bytesAccepted Total number of bytes that have been\n   *                                accepted by the server.\n   * @param  {number} bytesTotal Total number of bytes to be sent to the server.\n   */\n  _emitChunkComplete(chunkSize, bytesAccepted, bytesTotal) {\n    if (typeof this.options.onChunkComplete === \"function\") {\n      this.options.onChunkComplete(chunkSize, bytesAccepted, bytesTotal);\n    }\n  }\n\n  /**\n   * Set the headers used in the request and the withCredentials property\n   * as defined in the options\n   *\n   * @param {XMLHttpRequest} xhr\n   */\n  _setupXHR(xhr) {\n    xhr.setRequestHeader(\"Tus-Resumable\", \"1.0.0\");\n    let headers = this.options.headers;\n\n    for (let name in headers) {\n      xhr.setRequestHeader(name, headers[name]);\n    }\n\n    xhr.withCredentials = this.options.withCredentials;\n  }\n\n  /**\n   * Create a new upload using the creation extension by sending a POST\n   * request to the endpoint. After successful creation the file will be\n   * uploaded\n   *\n   * @api private\n   */\n  _createUpload() {\n    let xhr = newRequest();\n    xhr.open(\"POST\", this.options.endpoint, true);\n\n    xhr.onload = () => {\n      if (!(xhr.status >= 200 && xhr.status < 300)) {\n        this._emitXhrError(xhr, new Error(\"tus: unexpected response while creating upload\"));\n        return;\n      }\n\n      this.url = xhr.getResponseHeader(\"Location\");\n\n      if (this.options.resume) {\n        Storage.setItem(this._fingerprint, this.url);\n      }\n\n      this._offset = 0;\n      this._startUpload();\n    };\n\n    xhr.onerror = () => {\n      this._emitXhrError(xhr, new Error(\"tus: failed to create upload\"));\n    };\n\n    this._setupXHR(xhr);\n    xhr.setRequestHeader(\"Upload-Length\", this._size);\n\n    // Add metadata if values have been added\n    var metadata = encodeMetadata(this.options.metadata);\n    if (metadata !== \"\") {\n        xhr.setRequestHeader(\"Upload-Metadata\", metadata);\n    }\n\n    xhr.send(null);\n  }\n\n  /*\n   * Try to resume an existing upload. First a HEAD request will be sent\n   * to retrieve the offset. If the request fails a new upload will be\n   * created. In the case of a successful response the file will be uploaded.\n   *\n   * @api private\n   */\n  _resumeUpload() {\n    let xhr = newRequest();\n    xhr.open(\"HEAD\", this.url, true);\n\n    xhr.onload = () => {\n      if (!(xhr.status >= 200 && xhr.status < 300)) {\n        if (this.options.resume) {\n          // Remove stored fingerprint and corresponding endpoint,\n          // since the file can not be found\n          Storage.removeItem(this._fingerprint);\n        }\n\n        // Try to create a new upload\n        this.url = null;\n        this._createUpload();\n        return;\n      }\n\n      let offset = parseInt(xhr.getResponseHeader(\"Upload-Offset\"), 10);\n      if (isNaN(offset)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing offset value\"));\n        return;\n      }\n\n      let length = parseInt(xhr.getResponseHeader(\"Upload-Length\"), 10);\n      if (isNaN(length)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing length value\"));\n        return;\n      }\n\n      // Upload has already been completed and we do not need to send additional\n      // data to the server\n      if (offset === length) {\n        this._emitProgress(length, length);\n        this._emitSuccess();\n        return;\n      }\n\n      this._offset = offset;\n      this._startUpload();\n    };\n\n    xhr.onerror = () => {\n      this._emitXhrError(xhr, new Error(\"tus: failed to resume upload\"));\n    };\n\n    this._setupXHR(xhr);\n    xhr.send(null);\n  }\n\n  /**\n   * Start uploading the file using PATCH requests. The file will be divided\n   * into chunks as specified in the chunkSize option. During the upload\n   * the onProgress event handler may be invoked multiple times.\n   *\n   * @api private\n   */\n  _startUpload() {\n    let xhr = this._xhr = newRequest();\n    xhr.open(\"PATCH\", this.url, true);\n\n    xhr.onload = () => {\n      if (!(xhr.status >= 200 && xhr.status < 300)) {\n        this._emitXhrError(xhr, new Error(\"tus: unexpected response while uploading chunk\"));\n        return;\n      }\n\n      let offset = parseInt(xhr.getResponseHeader(\"Upload-Offset\"), 10);\n      if (isNaN(offset)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing offset value\"));\n        return;\n      }\n\n      this._emitProgress(offset, this._size);\n      this._emitChunkComplete(offset - this._offset, offset, this._size);\n\n      this._offset = offset;\n\n      if (offset == this._size) {\n        // Yay, finally done :)\n        this._emitSuccess();\n        this._source.close();\n        return;\n      }\n\n      this._startUpload();\n    };\n\n    xhr.onerror = () => {\n      // Don't emit an error if the upload was aborted manually\n      if (this._aborted) {\n        return;\n      }\n\n      this._emitXhrError(xhr, new Error(\"tus: failed to upload chunk at offset \" + this._offset));\n    };\n\n    // Test support for progress events before attaching an event listener\n    if (\"upload\" in xhr) {\n      xhr.upload.onprogress = (e) => {\n        if (!e.lengthComputable) {\n          return;\n        }\n\n        this._emitProgress(start + e.loaded, this._size);\n      };\n    }\n\n    this._setupXHR(xhr);\n\n    xhr.setRequestHeader(\"Upload-Offset\", this._offset);\n    xhr.setRequestHeader(\"Content-Type\", \"application/offset+octet-stream\");\n\n    let start = this._offset;\n    let end = this._offset + this.options.chunkSize;\n\n    // The specified chunkSize may be Infinity or the calcluated end position\n    // may exceed the file's size. In both cases, we limit the end position to\n    // the input's total size for simpler calculations and correctness.\n    if (end === Infinity || end > this._size) {\n      end = this._size;\n    }\n\n    xhr.send(this._source.slice(start, end));\n  }\n}\n\nfunction encodeMetadata(metadata) {\n    if (!Base64.isSupported) {\n        return \"\";\n    }\n\n    var encoded = [];\n\n    for (var key in metadata) {\n        encoded.push(key + \" \" + Base64.encode(metadata[key]));\n    }\n\n    return encoded.join(\",\");\n}\n\nUpload.defaultOptions = defaultOptions;\n\nexport default Upload;\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n"]}