{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","lib/browser/base64.js","lib/browser/request.js","lib/browser/source.js","lib/browser/storage.js","lib/fingerprint.js","lib/index.js","lib/upload.js","node_modules/extend/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","tus","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","encode","btoa","data","unescape","encodeURIComponent","isSupported","newRequest","XMLHttpRequest","getSource","FileSource","file","_classCallCheck","_file","size","start","end","slice","input","setItem","getItem","removeItem","hasStorage","localStorage","SECURITY_ERR","canStoreURLs","key","value","fingerprint","name","type","lastModified","join","defaultOptions","_window","Blob","prototype","Upload","_upload2","default","_storage","Base64","Storage","endpoint","_fingerprint2","resume","onProgress","onChunkComplete","onSuccess","onError","headers","chunkSize","Infinity","withCredentials","uploadUrl","uploadSize","overridePatchMethod","options","_extend2","url","_xhr","_fingerprint","_offset","_aborted","_size","_source","_emitError","source","isNaN","_resumeUpload","resumedUrl","_createUpload","abort","close","xhr","err","originalRequest","bytesSent","bytesTotal","bytesAccepted","setRequestHeader","_this","_request","open","onload","status","_emitXhrError","getResponseHeader","_startUpload","onerror","_setupXHR","metadata","encodeMetadata","send","_this2","offset","parseInt","_emitProgress","_emitSuccess","_this3","_emitChunkComplete","upload","onprogress","lengthComputable","loaded","encoded","push","hasOwn","Object","hasOwnProperty","toStr","toString","isArray","arr","Array","isPlainObject","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","extend","src","copy","copyIsArray","clone","target","arguments","deep"],"mappings":"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AAP;AACH;;AAED,MAAI,UAAU,EAAd;;AAEA,OAAK,IAAI,GAAT,IAAgB,QAAhB,EAA0B;AACtB,YAAQ,IAAR,CAAa,MAAM,GAAN,GAAY,OAAO,MAAP,CAAc,SAAS,GAAT,CAAd,CAAzB;AACH;;AAED,SAAO,QAAQ,IAAR,CAAa,GAAb,CAAP;AACH;;AAED,OAAO,cAAP,GAAwB,cAAxB;;kBAEe,M;;;ACtYf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"generated.js","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* global: window */\n\nconst {btoa} = window;\n\nexport function encode(data) {\n  return btoa(unescape(encodeURIComponent(data)));\n}\n\nexport const isSupported = \"btoa\" in window;\n","/* global window */\n\nexport function newRequest() {\n  return new window.XMLHttpRequest();\n}\n","class FileSource {\n  constructor(file) {\n    this._file = file;\n    this.size = file.size;\n  }\n\n  slice(start, end) {\n    return this._file.slice(start, end);\n  }\n\n  close() {}\n}\n\nexport function getSource(input) {\n  // Since we emulate the Blob type in our tests (not all target browsers\n  // support it), we cannot use `instanceof` for testing whether the input value\n  // can be handled. Instead, we simply check is the slice() function and the\n  // size property are available.\n  if (typeof input.slice === \"function\" && typeof input.size !== \"undefined\") {\n    return new FileSource(input);\n  }\n\n  throw new Error(\"source object may only be an instance of File or Blob in this environment\");\n}\n","/* global window, localStorage */\n\nlet hasStorage = false;\ntry {\n  hasStorage = \"localStorage\" in window;\n  // Attempt to access localStorage\n  localStorage.length;\n} catch (e) {\n  // If we try to access localStorage inside a sandboxed iframe, a SecurityError\n  // is thrown.\n  if (e.code === e.SECURITY_ERR) {\n    hasStorage = false;\n  } else {\n    throw e;\n  }\n}\n\nexport const canStoreURLs = hasStorage;\n\nexport function setItem(key, value) {\n  if (!hasStorage) return;\n  return localStorage.setItem(key, value);\n}\n\nexport function getItem(key) {\n  if (!hasStorage) return;\n  return localStorage.getItem(key);\n}\n\nexport function removeItem(key) {\n  if (!hasStorage) return;\n  return localStorage.removeItem(key);\n}\n","/**\n * Generate a fingerprint for a file which will be used the store the endpoint\n *\n * @param {File} file\n * @return {String}\n */\nexport default function fingerprint(file) {\n  return [\n\t\t\"tus\",\n\t\tfile.name,\n\t\tfile.type,\n\t\tfile.size,\n\t\tfile.lastModified\n  ].join(\"-\");\n}\n","/* global window */\nimport Upload from \"./upload\";\nimport {canStoreURLs} from \"./node/storage\";\n\nconst {defaultOptions} = Upload;\n\nif (typeof window !== \"undefined\") {\n  // Browser environment using XMLHttpRequest\n  const {XMLHttpRequest, Blob} = window;\n\n  var isSupported = (\n    XMLHttpRequest &&\n    Blob &&\n    typeof Blob.prototype.slice === \"function\"\n  );\n} else {\n  // Node.js environment using http module\n  var isSupported = true;\n}\n\n// The usage of the commonjs exporting syntax instead of the new ECMAScript\n// one is actually inteded and prevents weird behaviour if we are trying to\n// import this module in another module using Babel.\nmodule.exports = {\n  Upload,\n  isSupported,\n  canStoreURLs,\n  defaultOptions\n};\n","/* global window */\nimport fingerprint from \"./fingerprint\";\nimport extend from \"extend\";\n\n// We import the files used inside the Node environment which are rewritten\n// for browsers using the rules defined in the package.json\nimport {newRequest} from \"./node/request\";\nimport {getSource} from \"./node/source\";\nimport * as Base64 from \"./node/base64\";\nimport * as Storage from \"./node/storage\";\n\nconst defaultOptions = {\n  endpoint: \"\",\n  fingerprint,\n  resume: true,\n  onProgress: null,\n  onChunkComplete: null,\n  onSuccess: null,\n  onError: null,\n  headers: {},\n  chunkSize: Infinity,\n  withCredentials: false,\n  uploadUrl: null,\n  uploadSize: null,\n  overridePatchMethod: false\n};\n\nclass Upload {\n  constructor(file, options) {\n    this.options = extend(true, {}, defaultOptions, options);\n\n    // The underlying File/Blob object\n    this.file = file;\n\n    // The URL against which the file will be uploaded\n    this.url = null;\n\n    // The underlying XHR object for the current PATCH request\n    this._xhr = null;\n\n    // The fingerpinrt for the current file (set after start())\n    this._fingerprint = null;\n\n    // The offset used in the current PATCH request\n    this._offset = null;\n\n    // True if the current PATCH request has been aborted\n    this._aborted = false;\n\n    // The file's size in bytes\n    this._size = null;\n\n    // The Source object which will wrap around the given file and provides us\n    // with a unified interface for getting its size and slice chunks from its\n    // content allowing us to easily handle Files, Blobs, Buffers and Streams.\n    this._source = null;\n  }\n\n  start() {\n    let file = this.file;\n\n    if (!file) {\n      this._emitError(new Error(\"tus: no file or stream to upload provided\"));\n      return;\n    }\n\n    if (!this.options.endpoint) {\n        this._emitError(new Error(\"tus: no endpoint provided\"));\n        return;\n    }\n\n    let source = this._source = getSource(file, this.options.chunkSize);\n\n    // Firstly, check if the caller has supplied a manual upload size or else\n    // we will use the calculated size by the source object.\n    if (this.options.uploadSize != null) {\n      let size = +this.options.uploadSize;\n      if (isNaN(size)) {\n        throw new Error(\"tus: cannot convert `uploadSize` option into a number\");\n      }\n\n      this._size = size;\n    } else {\n      let size = source.size;\n\n      // The size property will be null if we cannot calculate the file's size,\n      // for example if you handle a stream.\n      if (size == null) {\n        throw new Error(\"tus: cannot automatically derive upload's size from input and must be specified manually using the `uploadSize` option\");\n      }\n\n      this._size = size;\n    }\n\n    // A URL has manually been specified, so we try to resume\n    if (this.options.uploadUrl != null) {\n        this.url = this.options.uploadUrl;\n        this._resumeUpload();\n        return;\n    }\n\n    // Try to find the endpoint for the file in the storage\n    if (this.options.resume) {\n        this._fingerprint = this.options.fingerprint(file);\n        let resumedUrl = Storage.getItem(this._fingerprint);\n\n        if (resumedUrl != null) {\n            this.url = resumedUrl;\n            this._resumeUpload();\n            return;\n        }\n    }\n\n    // An upload has not started for the file yet, so we start a new one\n    this._createUpload();\n  }\n\n  abort() {\n    if (this._xhr !== null) {\n      this._xhr.abort();\n      this._source.close();\n      this._aborted = true;\n    }\n  }\n\n  _emitXhrError(xhr, err) {\n    err.originalRequest = xhr;\n    this._emitError(err);\n  }\n\n  _emitError(err) {\n    if (typeof this.options.onError === \"function\") {\n      this.options.onError(err);\n    } else {\n      throw err;\n    }\n  }\n\n  _emitSuccess() {\n    if (typeof this.options.onSuccess === \"function\") {\n      this.options.onSuccess();\n    }\n  }\n\n  /**\n   * Publishes notification when data has been sent to the server. This\n   * data may not have been accepted by the server yet.\n   * @param  {number} bytesSent  Number of bytes sent to the server.\n   * @param  {number} bytesTotal Total number of bytes to be sent to the server.\n   */\n  _emitProgress(bytesSent, bytesTotal) {\n    if (typeof this.options.onProgress === \"function\") {\n      this.options.onProgress(bytesSent, bytesTotal);\n    }\n  }\n\n  /**\n   * Publishes notification when a chunk of data has been sent to the server\n   * and accepted by the server.\n   * @param  {number} chunkSize  Size of the chunk that was accepted by the\n   *                             server.\n   * @param  {number} bytesAccepted Total number of bytes that have been\n   *                                accepted by the server.\n   * @param  {number} bytesTotal Total number of bytes to be sent to the server.\n   */\n  _emitChunkComplete(chunkSize, bytesAccepted, bytesTotal) {\n    if (typeof this.options.onChunkComplete === \"function\") {\n      this.options.onChunkComplete(chunkSize, bytesAccepted, bytesTotal);\n    }\n  }\n\n  /**\n   * Set the headers used in the request and the withCredentials property\n   * as defined in the options\n   *\n   * @param {XMLHttpRequest} xhr\n   */\n  _setupXHR(xhr) {\n    xhr.setRequestHeader(\"Tus-Resumable\", \"1.0.0\");\n    let headers = this.options.headers;\n\n    for (let name in headers) {\n      xhr.setRequestHeader(name, headers[name]);\n    }\n\n    xhr.withCredentials = this.options.withCredentials;\n  }\n\n  /**\n   * Create a new upload using the creation extension by sending a POST\n   * request to the endpoint. After successful creation the file will be\n   * uploaded\n   *\n   * @api private\n   */\n  _createUpload() {\n    let xhr = newRequest();\n    xhr.open(\"POST\", this.options.endpoint, true);\n\n    xhr.onload = () => {\n      if (!(xhr.status >= 200 && xhr.status < 300)) {\n        this._emitXhrError(xhr, new Error(\"tus: unexpected response while creating upload\"));\n        return;\n      }\n\n      this.url = xhr.getResponseHeader(\"Location\");\n\n      if (this.options.resume) {\n        Storage.setItem(this._fingerprint, this.url);\n      }\n\n      this._offset = 0;\n      this._startUpload();\n    };\n\n    xhr.onerror = () => {\n      this._emitXhrError(xhr, new Error(\"tus: failed to create upload\"));\n    };\n\n    this._setupXHR(xhr);\n    xhr.setRequestHeader(\"Upload-Length\", this._size);\n\n    // Add metadata if values have been added\n    var metadata = encodeMetadata(this.options.metadata);\n    if (metadata !== \"\") {\n        xhr.setRequestHeader(\"Upload-Metadata\", metadata);\n    }\n\n    xhr.send(null);\n  }\n\n  /*\n   * Try to resume an existing upload. First a HEAD request will be sent\n   * to retrieve the offset. If the request fails a new upload will be\n   * created. In the case of a successful response the file will be uploaded.\n   *\n   * @api private\n   */\n  _resumeUpload() {\n    let xhr = newRequest();\n    xhr.open(\"HEAD\", this.url, true);\n\n    xhr.onload = () => {\n      if (!(xhr.status >= 200 && xhr.status < 300)) {\n        if (this.options.resume) {\n          // Remove stored fingerprint and corresponding endpoint,\n          // since the file can not be found\n          Storage.removeItem(this._fingerprint);\n        }\n\n        // Try to create a new upload\n        this.url = null;\n        this._createUpload();\n        return;\n      }\n\n      let offset = parseInt(xhr.getResponseHeader(\"Upload-Offset\"), 10);\n      if (isNaN(offset)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing offset value\"));\n        return;\n      }\n\n      let length = parseInt(xhr.getResponseHeader(\"Upload-Length\"), 10);\n      if (isNaN(length)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing length value\"));\n        return;\n      }\n\n      // Upload has already been completed and we do not need to send additional\n      // data to the server\n      if (offset === length) {\n        this._emitProgress(length, length);\n        this._emitSuccess();\n        return;\n      }\n\n      this._offset = offset;\n      this._startUpload();\n    };\n\n    xhr.onerror = () => {\n      this._emitXhrError(xhr, new Error(\"tus: failed to resume upload\"));\n    };\n\n    this._setupXHR(xhr);\n    xhr.send(null);\n  }\n\n  /**\n   * Start uploading the file using PATCH requests. The file will be divided\n   * into chunks as specified in the chunkSize option. During the upload\n   * the onProgress event handler may be invoked multiple times.\n   *\n   * @api private\n   */\n  _startUpload() {\n    let xhr = this._xhr = newRequest();\n\n    // Some browser and servers may not support the PATCH method. For those\n    // cases, you can tell tus-js-client to use a POST request with the\n    // X-HTTP-Method-Override header for simulating a PATCH request.\n    if (this.options.overridePatchMethod) {\n      xhr.open(\"POST\", this.url, true);\n      xhr.setRequestHeader(\"X-HTTP-Method-Override\", \"PATCH\");\n    } else {\n      xhr.open(\"PATCH\", this.url, true);\n    }\n\n    xhr.onload = () => {\n      if (!(xhr.status >= 200 && xhr.status < 300)) {\n        this._emitXhrError(xhr, new Error(\"tus: unexpected response while uploading chunk\"));\n        return;\n      }\n\n      let offset = parseInt(xhr.getResponseHeader(\"Upload-Offset\"), 10);\n      if (isNaN(offset)) {\n        this._emitXhrError(xhr, new Error(\"tus: invalid or missing offset value\"));\n        return;\n      }\n\n      this._emitProgress(offset, this._size);\n      this._emitChunkComplete(offset - this._offset, offset, this._size);\n\n      this._offset = offset;\n\n      if (offset == this._size) {\n        // Yay, finally done :)\n        this._emitSuccess();\n        this._source.close();\n        return;\n      }\n\n      this._startUpload();\n    };\n\n    xhr.onerror = () => {\n      // Don't emit an error if the upload was aborted manually\n      if (this._aborted) {\n        return;\n      }\n\n      this._emitXhrError(xhr, new Error(\"tus: failed to upload chunk at offset \" + this._offset));\n    };\n\n    // Test support for progress events before attaching an event listener\n    if (\"upload\" in xhr) {\n      xhr.upload.onprogress = (e) => {\n        if (!e.lengthComputable) {\n          return;\n        }\n\n        this._emitProgress(start + e.loaded, this._size);\n      };\n    }\n\n    this._setupXHR(xhr);\n\n    xhr.setRequestHeader(\"Upload-Offset\", this._offset);\n    xhr.setRequestHeader(\"Content-Type\", \"application/offset+octet-stream\");\n\n    let start = this._offset;\n    let end = this._offset + this.options.chunkSize;\n\n    // The specified chunkSize may be Infinity or the calcluated end position\n    // may exceed the file's size. In both cases, we limit the end position to\n    // the input's total size for simpler calculations and correctness.\n    if (end === Infinity || end > this._size) {\n      end = this._size;\n    }\n\n    xhr.send(this._source.slice(start, end));\n  }\n}\n\nfunction encodeMetadata(metadata) {\n    if (!Base64.isSupported) {\n        return \"\";\n    }\n\n    var encoded = [];\n\n    for (var key in metadata) {\n        encoded.push(key + \" \" + Base64.encode(metadata[key]));\n    }\n\n    return encoded.join(\",\");\n}\n\nUpload.defaultOptions = defaultOptions;\n\nexport default Upload;\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) {/**/}\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0],\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t} else if ((typeof target !== 'object' && typeof target !== 'function') || target == null) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = target[name];\n\t\t\t\tcopy = options[name];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\ttarget[name] = extend(deep, clone, copy);\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\ttarget[name] = copy;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\n"]}